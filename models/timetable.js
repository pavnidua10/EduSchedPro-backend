import mongoose from "mongoose";

const { Schema } = mongoose;

const TimetableSchema = new Schema(
  {
    name: {
      type: String,
      required: [true, "Timetable name is required"],
      trim: true,
      maxlength: [200, "Timetable name cannot exceed 200 characters"]
    },
    academicYear: {
      type: String,
      required: [true, "Academic year is required"],
      trim: true,
      match: [/^\d{4}-\d{4}$/, "Academic year must be in format YYYY-YYYY"]
    },
    semester: {
      type: Number,
      required: [true, "Semester is required"],
      min: [1, "Semester must be at least 1"],
      max: [12, "Semester cannot exceed 12"]
    },
    department: {
      type: Schema.Types.ObjectId,
      ref: "Department",
      required: [true, "Department is required"]
    },
    batch: {
      type: Schema.Types.ObjectId,
      ref: "Batch",
      default: null
    },
    schedule: [
      {
        day: {
          type: String,
          required: true,
          enum: ["MON", "TUE", "WED", "THU", "FRI", "SAT"]
        },
        timeSlot: {
          type: String,
          required: true,
          trim: true
        },
        subject: {
          type: Schema.Types.ObjectId,
          ref: "Subject",
          required: true
        },
        faculty: {
          type: Schema.Types.ObjectId,
          ref: "Faculty",
          required: true
        },
        classroom: {
          type: Schema.Types.ObjectId,
          ref: "Classroom",
          required: true
        }
      }
    ],
    status: {
      type: String,
      required: [true, "Status is required"],
      enum: ["draft", "approved", "active", "archived"],
      default: "draft"
    },
    conflicts: [
      {
        type: {
          type: String,
          required: true,
          trim: true
        },
        description: {
          type: String,
          required: true,
          trim: true
        },
        severity: {
          type: String,
          required: true,
          enum: ["low", "medium", "high"]
        }
      }
    ],
    optimizationScore: {
      type: Number,
      default: 0,
      min: [0, "Optimization score cannot be negative"],
      max: [100, "Optimization score cannot exceed 100"]
    },
    generatedBy: {
      type: Schema.Types.ObjectId,
      ref: "User",
      required: [true, "Generated by user is required"]
    },
    approvedBy: {
      type: Schema.Types.ObjectId,
      ref: "User",
      default: null
    },
    approvalDate: {
      type: Date,
      default: null
    }
  },
  { timestamps: true, toJSON: { virtuals: true }, toObject: { virtuals: true } }
);

TimetableSchema.index({ department: 1, academicYear: 1, semester: 1 });
TimetableSchema.index({ status: 1 });
TimetableSchema.index({ batch: 1 });

const Timetable = mongoose.model("Timetable", TimetableSchema);
export default Timetable;
